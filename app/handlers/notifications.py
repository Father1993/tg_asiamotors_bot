from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from app.utils.supabase import SupabaseService
from app.keyboards.base import KeyboardButtons as kb
import logging

router = Router()
supabase = SupabaseService()
logger = logging.getLogger(__name__)

class NotificationTypes:
    PRICE_DROP = "price_drop"  # –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã
    NEW_ARRIVAL = "new_arrival"  # –ù–æ–≤—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
    SAVED_SEARCH = "saved_search"  # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    STOCK_STATUS = "stock_status"  # –°—Ç–∞—Ç—É—Å –Ω–∞–ª–∏—á–∏—è
    SIMILAR_CARS = "similar_cars"  # –ü–æ—Ö–æ–∂–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
    SPECIAL_OFFER = "special_offer"  # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

@router.message(F.text == kb.NOTIFICATIONS)
async def show_notifications_menu(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üè∑ –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã",
                    callback_data="notify_settings_price_drop"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üÜï –ù–æ–≤—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è",
                    callback_data="notify_settings_new_arrival"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîç –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫",
                    callback_data="notify_settings_saved_search"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì¶ –°—Ç–∞—Ç—É—Å –Ω–∞–ª–∏—á–∏—è",
                    callback_data="notify_settings_stock_status"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üöó –ü–æ—Ö–æ–∂–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏",
                    callback_data="notify_settings_similar_cars"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üéÅ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
                    callback_data="notify_settings_special_offer"
                )
            ]
        ]
    )

    await message.answer(
        "üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:\n\n"
        "‚Ä¢ –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã - —É–∑–Ω–∞–≤–∞–π—Ç–µ –ø–µ—Ä–≤—ã–º –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –∞–≤—Ç–æ\n"
        "‚Ä¢ –ù–æ–≤—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è - –±—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –Ω–æ–≤—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –∫–∞—Ç–∞–ª–æ–≥–µ\n"
        "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ - –ø–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∞–≤—Ç–æ –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º\n"
        "‚Ä¢ –°—Ç–∞—Ç—É—Å –Ω–∞–ª–∏—á–∏—è - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ\n"
        "‚Ä¢ –ü–æ—Ö–æ–∂–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ - —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ—Ö–æ–∂–∏—Ö –∞–≤—Ç–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤\n"
        "‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n\n"
        "‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
        reply_markup=keyboard
    )

async def send_price_drop_notification(user_id: int, car_data: dict, old_price: float, new_price: float):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω—ã"""
    message_text = (
        "üí∞ –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã!\n\n"
        f"üöó {car_data['brand']} {car_data['model']} {car_data['year']}\n"
        f"üìâ –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {old_price:,.0f} ¬•\n"
        f"üìä –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {new_price:,.0f} ¬•\n"
        f"üíé –í–∞—à–∞ –≤—ã–≥–æ–¥–∞: {(old_price - new_price):,.0f} ¬•\n\n"
        "–£—Å–ø–µ–π—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ –≤—ã–≥–æ–¥–Ω–æ–π —Ü–µ–Ω–µ!"
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å",
                    callback_data=f"view_car_{car_data['id']}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å",
                    callback_data=f"calculate_{car_data['id']}"
                )
            ]
        ]
    )

    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # await bot.send_message(user_id, message_text, reply_markup=keyboard)

async def send_new_arrival_notification(user_id: int, car_data: dict):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏"""
    message_text = (
        "üÜï –ù–æ–≤–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ!\n\n"
        f"üöó {car_data['brand']} {car_data['model']}\n"
        f"üìÖ –ì–æ–¥: {car_data['year']}\n"
        f"üí∞ –¶–µ–Ω–∞: {car_data['price']:,.0f} ¬•\n"
        f"üõ† –î–≤–∏–≥–∞—Ç–µ–ª—å: {car_data['specs']['engineVolume']} –ª. "
        f"({car_data['specs']['horsePower']} –ª.—Å.)\n"
        f"üìä –ü—Ä–æ–±–µ–≥: {car_data['specs']['mileage']} –∫–º\n\n"
        "–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ —É–≤–∏–¥–∏—Ç —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!"
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üì± –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",
                    callback_data=f"contact_manager_{car_data['id']}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ù§Ô∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
                    callback_data=f"fav_{car_data['id']}"
                )
            ]
        ]
    )

    # await bot.send_photo(user_id, car_data['images'][0], message_text, reply_markup=keyboard)

def register_handlers(dp: Router) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    dp.include_router(router) 